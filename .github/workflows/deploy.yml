name: Deploy
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: mbtileserver
  ECS_SERVICE: static-tile-svc
  ECS_CLUSTER: felt-wrangler
  CONTAINER_NAME: mbtileserver
  ECS_TASK_DEFINITION: ./.github/workflows/task-definition.json
jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image: '${{ steps.build-image.outputs.image }}'
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ env.AWS_REGION }}'
          mask-aws-account-id: false
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: 'Build, tag, and push image to Amazon ECR'
        id: build-image
        env:
          ECR_REGISTRY: '${{ steps.login-ecr.outputs.registry }}'
          IMAGE_TAG: '${{ github.sha }}'
        run: >
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f
          ./Dockerfile .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          echo "::set-output
          name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  deploy:
    name: Deploy MBTileServer
    runs-on: ubuntu-latest
    needs:
      - build-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ env.AWS_REGION }}'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: '${{ env.ECS_TASK_DEFINITION }}'
          container-name: '${{ env.CONTAINER_NAME }}'
          image: '${{ needs.build-image.outputs.image }}'
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: '${{ steps.task-def.outputs.task-definition }}'
          service: '${{ env.ECS_SERVICE }}'
          cluster: '${{ env.ECS_CLUSTER }}'
          wait-for-service-stability: true
